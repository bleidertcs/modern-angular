# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Angular Build, Tag and Release

on:
  pull_request:
    branches: [main]

jobs:
  build-and-release: # Combined build and release job
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - uses: actions/checkout@v3

      - name: Fetch all history for all tags and branches (optional)
        run: |
          git config remote.origin.url https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git fetch --prune --depth=10000  # Uncomment if needed for detailed commit history

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm i

      - name: Build
        run: npm run build

      - name: Generate Version with GitVersion (optional)
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x" # Customize versioning scheme if needed
      - name: Use GitVersion to generate tag (optional)
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      - name: Create a more informative tag message (optional)
        run: |
          git tag -a v${{ steps.gitversion.outputs.MajorMinorPatch }} -m "Build ${{ steps.gitversion.outputs.MajorMinorPatch }} - ${{ github.sha.substring(0,7) }}: ${{ github.base_ref }}...HEAD - ${{ github.event.commit.message }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Tag (if using GitVersion)
        run: git push origin v${{ steps.gitversion.outputs.MajorMinorPatch }}

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.gitversion.outputs.MajorMinorPatch  || github.sha }} # Use GitVersion or commit SHA as tag
          release_name: Build ${{ steps.gitversion.outputs.MajorMinorPatch  || github.sha }} # Use GitVersion or commit SHA in release name
          body: |
            **Commits:**
            $(git log --pretty=format:'- %s (%h)' origin/main..HEAD)

          draft: false
          prerelease: false

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist

      # - name: Create Release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: v${{ steps.version.outputs.content }}
      #     release_name: Build ${{ steps.version.outputs.content }}
      #     body: |
      #       This is the release description for Build ${{ steps.version.outputs.content }}.
      #       You can add more details here.

      #       **Latest Commit:**
      #       $(git log --pretty=format:'- %s' -n 1 HEAD)

      #     draft: false
      #     prerelease: false

      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: build
      #     path: dist
      #     token: ${{ secrets.GITHUB_TOKEN  }}
      #     commit: ${{ github.sha }}
      #     tag: ${{ steps.version.outputs.content }}

      # - name: Deploy
      #   run: |
      #     npm install
      #     npm run-script deploy
      # - name: Deploy
      #   uses: JamesIves/github-pages-deploy-action@releases/v3
      #   with:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     BRANCH: gh-pages
      #     FOLDER: dist/angular-shop
